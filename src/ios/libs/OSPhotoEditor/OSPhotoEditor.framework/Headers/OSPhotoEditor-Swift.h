// Generated by Apple Swift version 5.1 (swiftlang-1100.0.270.13 clang-1100.0.33.7)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="OSPhotoEditor",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class UIWindow;
@class UIApplication;

SWIFT_CLASS("_TtC13OSPhotoEditor11AppDelegate")
@interface AppDelegate : UIResponder <UIApplicationDelegate>
@property (nonatomic, strong) UIWindow * _Nullable window;
- (BOOL)application:(UIApplication * _Nonnull)application didFinishLaunchingWithOptions:(NSDictionary<UIApplicationLaunchOptionsKey, id> * _Nullable)launchOptions SWIFT_WARN_UNUSED_RESULT;
- (void)applicationWillResignActive:(UIApplication * _Nonnull)application;
- (void)applicationDidEnterBackground:(UIApplication * _Nonnull)application;
- (void)applicationWillEnterForeground:(UIApplication * _Nonnull)application;
- (void)applicationDidBecomeActive:(UIApplication * _Nonnull)application;
- (void)applicationWillTerminate:(UIApplication * _Nonnull)application;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIView;
@class NSCoder;

SWIFT_CLASS("_TtC13OSPhotoEditor23ColorCollectionViewCell")
@interface ColorCollectionViewCell : UICollectionViewCell
@property (nonatomic, weak) IBOutlet UIView * _Null_unspecified colorView;
- (void)awakeFromNib;
- (void)layoutSubviews;
@property (nonatomic, getter=isSelected) BOOL selected;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIColor;

/// <ul>
///   <li>
///     didSelectColor
///   </li>
/// </ul>
SWIFT_PROTOCOL("_TtP13OSPhotoEditor13ColorDelegate_")
@protocol ColorDelegate
- (void)didSelectColorWithColor:(UIColor * _Nonnull)color;
@end

@protocol StickersViewControllerDelegate;
@class UICollectionView;

SWIFT_CLASS("_TtC13OSPhotoEditor28ColorsCollectionViewDelegate")
@interface ColorsCollectionViewDelegate : NSObject <UICollectionViewDataSource, UICollectionViewDelegateFlowLayout>
@property (nonatomic, strong) id <ColorDelegate> _Nullable colorDelegate;
/// Array of Colors that will show while drawing or typing
@property (nonatomic, copy) NSArray<UIColor *> * _Nonnull colors;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, strong) id <StickersViewControllerDelegate> _Nullable stickersViewControllerDelegate;
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (NSInteger)numberOfSectionsInCollectionView:(UICollectionView * _Nonnull)collectionView SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end

@class ResizeControl;

SWIFT_PROTOCOL("_TtP13OSPhotoEditor21ResizeControlDelegate_")
@protocol ResizeControlDelegate
- (void)resizeControlDidBeginResizing:(ResizeControl * _Nonnull)control;
- (void)resizeControlDidResize:(ResizeControl * _Nonnull)control;
- (void)resizeControlDidEndResizing:(ResizeControl * _Nonnull)control;
@end

@protocol CropRectViewDelegate;
@class UIEvent;

SWIFT_CLASS("_TtC13OSPhotoEditor12CropRectView")
@interface CropRectView : UIView <ResizeControlDelegate>
@property (nonatomic, weak) id <CropRectViewDelegate> _Nullable delegate;
@property (nonatomic) BOOL showsGridMajor;
@property (nonatomic) BOOL showsGridMinor;
@property (nonatomic) BOOL keepAspectRatio;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (UIView * _Nullable)hitTest:(CGPoint)point withEvent:(UIEvent * _Nullable)event SWIFT_WARN_UNUSED_RESULT;
- (void)drawRect:(CGRect)rect;
- (void)layoutSubviews;
- (void)enableResizing:(BOOL)enabled;
- (void)resizeControlDidBeginResizing:(ResizeControl * _Nonnull)control;
- (void)resizeControlDidResize:(ResizeControl * _Nonnull)control;
- (void)resizeControlDidEndResizing:(ResizeControl * _Nonnull)control;
@end


SWIFT_PROTOCOL("_TtP13OSPhotoEditor20CropRectViewDelegate_")
@protocol CropRectViewDelegate
- (void)cropRectViewDidBeginEditing:(CropRectView * _Nonnull)view;
- (void)cropRectViewDidChange:(CropRectView * _Nonnull)view;
- (void)cropRectViewDidEndEditing:(CropRectView * _Nonnull)view;
@end

@class UIImage;
@class UIRotationGestureRecognizer;
@class UIScrollView;
@class UIGestureRecognizer;

SWIFT_CLASS("_TtC13OSPhotoEditor8CropView")
@interface CropView : UIView <CropRectViewDelegate, UIGestureRecognizerDelegate, UIScrollViewDelegate>
@property (nonatomic, strong) UIImage * _Nullable image;
@property (nonatomic, strong) UIView * _Nullable imageView;
@property (nonatomic, readonly, strong) UIImage * _Nullable croppedImage;
@property (nonatomic) BOOL keepAspectRatio;
@property (nonatomic) CGFloat cropAspectRatio;
@property (nonatomic, readonly) CGAffineTransform rotation;
@property (nonatomic) CGFloat rotationAngle;
@property (nonatomic) CGRect cropRect;
@property (nonatomic) CGRect imageCropRect;
@property (nonatomic) BOOL resizeEnabled;
@property (nonatomic) BOOL showCroppedArea;
@property (nonatomic, strong) UIRotationGestureRecognizer * _Null_unspecified rotationGestureRecognizer;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (UIView * _Nullable)hitTest:(CGPoint)point withEvent:(UIEvent * _Nullable)event SWIFT_WARN_UNUSED_RESULT;
- (void)layoutSubviews;
- (void)setRotationAngle:(CGFloat)rotationAngle snap:(BOOL)snap;
- (void)resetCropRect;
- (void)resetCropRectAnimated:(BOOL)animated;
- (CGRect)zoomedCropRect SWIFT_WARN_UNUSED_RESULT;
- (UIImage * _Nonnull)croppedImage:(UIImage * _Nonnull)image SWIFT_WARN_UNUSED_RESULT;
- (void)handleRotation:(UIRotationGestureRecognizer * _Nonnull)gestureRecognizer;
- (void)cropRectViewDidBeginEditing:(CropRectView * _Nonnull)view;
- (void)cropRectViewDidChange:(CropRectView * _Nonnull)view;
- (void)cropRectViewDidEndEditing:(CropRectView * _Nonnull)view;
- (UIView * _Nullable)viewForZoomingInScrollView:(UIScrollView * _Nonnull)scrollView SWIFT_WARN_UNUSED_RESULT;
- (void)scrollViewWillEndDragging:(UIScrollView * _Nonnull)scrollView withVelocity:(CGPoint)velocity targetContentOffset:(CGPoint * _Nonnull)targetContentOffset;
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer * _Nonnull)otherGestureRecognizer SWIFT_WARN_UNUSED_RESULT;
@end

@protocol CropViewControllerDelegate;
@class NSBundle;
@class UIBarButtonItem;

SWIFT_CLASS("_TtC13OSPhotoEditor18CropViewController")
@interface CropViewController : UIViewController
@property (nonatomic, weak) id <CropViewControllerDelegate> _Nullable delegate;
@property (nonatomic, strong) UIImage * _Nullable image;
@property (nonatomic) BOOL keepAspectRatio;
@property (nonatomic) CGFloat cropAspectRatio;
@property (nonatomic) CGRect cropRect;
@property (nonatomic) CGRect imageCropRect;
@property (nonatomic) BOOL toolbarHidden;
@property (nonatomic) BOOL rotationEnabled;
@property (nonatomic, readonly) CGAffineTransform rotationTransform;
@property (nonatomic, readonly) CGRect zoomedCropRect;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (void)loadView;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (void)resetCropRect;
- (void)resetCropRectAnimated:(BOOL)animated;
- (void)cancel:(UIBarButtonItem * _Nonnull)sender;
- (void)done:(UIBarButtonItem * _Nonnull)sender;
- (void)constrain:(UIBarButtonItem * _Nonnull)sender;
@end


SWIFT_PROTOCOL("_TtP13OSPhotoEditor26CropViewControllerDelegate_")
@protocol CropViewControllerDelegate
- (void)cropViewController:(CropViewController * _Nonnull)controller didFinishCroppingImage:(UIImage * _Nonnull)image transform:(CGAffineTransform)transform cropRect:(CGRect)cropRect;
- (void)cropViewControllerDidCancel:(CropViewController * _Nonnull)controller;
@end

@class UILabel;

SWIFT_CLASS("_TtC13OSPhotoEditor23EmojiCollectionViewCell")
@interface EmojiCollectionViewCell : UICollectionViewCell
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified emojiLabel;
- (void)awakeFromNib;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UICollectionViewLayout;

SWIFT_CLASS("_TtC13OSPhotoEditor28EmojisCollectionViewDelegate")
@interface EmojisCollectionViewDelegate : NSObject <UICollectionViewDataSource, UICollectionViewDelegateFlowLayout>
@property (nonatomic, strong) id <StickersViewControllerDelegate> _Nullable stickersViewControllerDelegate;
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull emojis;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (NSInteger)numberOfSectionsInCollectionView:(UICollectionView * _Nonnull)collectionView SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout minimumLineSpacingForSectionAtIndex:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout minimumInteritemSpacingForSectionAtIndex:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
@end

@class CAGradientLayer;

SWIFT_CLASS("_TtC13OSPhotoEditor12GradientView")
@interface GradientView : UIView
@property (nonatomic) BOOL gradientFromtop;
@property (nonatomic, strong) CAGradientLayer * _Nonnull gradientLayer;
- (void)awakeFromNib;
- (void)layoutSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// <ul>
///   <li>
///     didSelectView
///   </li>
///   <li>
///     didSelectImage
///   </li>
///   <li>
///     stickersViewDidDisappear
///   </li>
/// </ul>
SWIFT_PROTOCOL("_TtP13OSPhotoEditor19PhotoEditorDelegate_")
@protocol PhotoEditorDelegate
/// \param image edited Image
///
- (void)doneEditingWithImage:(UIImage * _Nonnull)image;
/// StickersViewController did Disappear
- (void)canceledEditing;
@end

@class UIImageView;
@class NSLayoutConstraint;
@class UIButton;
@class UIFont;
@class UITextView;
@class StickersViewController;

SWIFT_CLASS("_TtC13OSPhotoEditor25PhotoEditorViewController")
@interface PhotoEditorViewController : UIViewController
/// holding the 2 imageViews original image and drawing & stickers
@property (nonatomic, weak) IBOutlet UIView * _Null_unspecified canvasView;
@property (nonatomic, strong) IBOutlet UIImageView * _Null_unspecified imageView;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Null_unspecified imageViewHeightConstraint;
@property (nonatomic, weak) IBOutlet UIImageView * _Null_unspecified canvasImageView;
@property (nonatomic, weak) IBOutlet UIView * _Null_unspecified topToolbar;
@property (nonatomic, weak) IBOutlet UIView * _Null_unspecified bottomToolbar;
@property (nonatomic, weak) IBOutlet UIView * _Null_unspecified topGradient;
@property (nonatomic, weak) IBOutlet UIView * _Null_unspecified bottomGradient;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified doneButton;
@property (nonatomic, weak) IBOutlet UIView * _Null_unspecified deleteView;
@property (nonatomic, weak) IBOutlet UICollectionView * _Null_unspecified colorsCollectionView;
@property (nonatomic, weak) IBOutlet UIView * _Null_unspecified colorPickerView;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Null_unspecified colorPickerViewBottomConstraint;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified cropButton;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified stickerButton;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified drawButton;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified textButton;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified saveButton;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified shareButton;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified clearButton;
@property (nonatomic, strong) UIImage * _Nullable image;
/// Array of Stickers -UIImage- that the user will choose from
@property (nonatomic, copy) NSArray<UIImage *> * _Nonnull stickers;
/// Array of Colors that will show while drawing or typing
@property (nonatomic, copy) NSArray<UIColor *> * _Nonnull colors;
@property (nonatomic, strong) id <PhotoEditorDelegate> _Nullable photoEditorDelegate;
@property (nonatomic, strong) ColorsCollectionViewDelegate * _Null_unspecified colorsCollectionViewDelegate;
@property (nonatomic) BOOL stickersVCIsVisible;
@property (nonatomic, strong) UIColor * _Nonnull drawColor;
@property (nonatomic, strong) UIColor * _Nonnull textColor;
@property (nonatomic) BOOL isDrawing;
@property (nonatomic) BOOL swiped;
@property (nonatomic, strong) UIFont * _Nullable lastTextViewFont;
@property (nonatomic, strong) UITextView * _Nullable activeTextView;
@property (nonatomic, strong) UIImageView * _Nullable imageViewToPan;
@property (nonatomic) BOOL isTyping;
@property (nonatomic, strong) StickersViewController * _Null_unspecified stickersViewController;
- (void)loadView;
- (void)viewDidLoad;
- (void)configureCollectionView;
- (void)setImageViewWithImage:(UIImage * _Nonnull)image;
- (void)hideToolbarWithHide:(BOOL)hide;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@interface PhotoEditorViewController (SWIFT_EXTENSION(OSPhotoEditor))
- (void)registerFont;
@end


@interface PhotoEditorViewController (SWIFT_EXTENSION(OSPhotoEditor)) <ColorDelegate>
- (void)didSelectColorWithColor:(UIColor * _Nonnull)color;
@end


@interface PhotoEditorViewController (SWIFT_EXTENSION(OSPhotoEditor))
- (void)addStickersViewController;
- (void)removeStickersView;
@end


@interface PhotoEditorViewController (SWIFT_EXTENSION(OSPhotoEditor)) <CropViewControllerDelegate>
- (void)cropViewController:(CropViewController * _Nonnull)controller didFinishCroppingImage:(UIImage * _Nonnull)image transform:(CGAffineTransform)transform cropRect:(CGRect)cropRect;
- (void)cropViewControllerDidCancel:(CropViewController * _Nonnull)controller;
@end

@class NSNotification;

@interface PhotoEditorViewController (SWIFT_EXTENSION(OSPhotoEditor))
- (void)keyboardDidShowWithNotification:(NSNotification * _Nonnull)notification;
- (void)keyboardWillHideWithNotification:(NSNotification * _Nonnull)notification;
- (void)keyboardWillChangeFrame:(NSNotification * _Nonnull)notification;
@end


@interface PhotoEditorViewController (SWIFT_EXTENSION(OSPhotoEditor)) <UITextViewDelegate>
- (void)textViewDidChange:(UITextView * _Nonnull)textView;
- (void)textViewDidBeginEditing:(UITextView * _Nonnull)textView;
- (void)textViewDidEndEditing:(UITextView * _Nonnull)textView;
@end

@class UITouch;

@interface PhotoEditorViewController (SWIFT_EXTENSION(OSPhotoEditor))
- (void)touchesBegan:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesMoved:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesEnded:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)drawLineFrom:(CGPoint)fromPoint toPoint:(CGPoint)toPoint;
@end


/// <ul>
///   <li>
///     didSelectView
///   </li>
///   <li>
///     didSelectImage
///   </li>
///   <li>
///     stickersViewDidDisappear
///   </li>
/// </ul>
SWIFT_PROTOCOL("_TtP13OSPhotoEditor30StickersViewControllerDelegate_")
@protocol StickersViewControllerDelegate
/// \param view selected view from StickersViewController
///
- (void)didSelectViewWithView:(UIView * _Nonnull)view;
/// \param image selected Image from StickersViewController
///
- (void)didSelectImageWithImage:(UIImage * _Nonnull)image;
/// StickersViewController did Disappear
- (void)stickersViewDidDisappear;
@end


@interface PhotoEditorViewController (SWIFT_EXTENSION(OSPhotoEditor)) <StickersViewControllerDelegate>
- (void)didSelectViewWithView:(UIView * _Nonnull)view;
- (void)didSelectImageWithImage:(UIImage * _Nonnull)image;
- (void)stickersViewDidDisappear;
- (void)addGesturesWithView:(UIView * _Nonnull)view;
@end

@class NSError;

@interface PhotoEditorViewController (SWIFT_EXTENSION(OSPhotoEditor))
- (IBAction)cancelButtonTapped:(id _Nonnull)sender;
- (IBAction)cropButtonTapped:(UIButton * _Nonnull)sender;
- (IBAction)stickersButtonTapped:(id _Nonnull)sender;
- (IBAction)drawButtonTapped:(id _Nonnull)sender;
- (IBAction)textButtonTapped:(id _Nonnull)sender;
- (IBAction)doneButtonTapped:(id _Nonnull)sender;
- (IBAction)saveButtonTapped:(id _Nonnull)sender;
- (IBAction)shareButtonTapped:(UIButton * _Nonnull)sender;
- (IBAction)clearButtonTapped:(id _Nonnull)sender;
- (IBAction)continueButtonPressed:(id _Nonnull)sender;
- (void)image:(UIImage * _Nonnull)image withPotentialError:(NSError * _Nullable * _Nullable)error contextInfo:(void const * _Nonnull)contextInfo;
- (void)hideControls;
@end

@class UIPanGestureRecognizer;
@class UIPinchGestureRecognizer;
@class UITapGestureRecognizer;
@class UIScreenEdgePanGestureRecognizer;

@interface PhotoEditorViewController (SWIFT_EXTENSION(OSPhotoEditor)) <UIGestureRecognizerDelegate>
/// UIPanGestureRecognizer - Moving Objects
/// Selecting transparent parts of the imageview won’t move the object
- (void)panGesture:(UIPanGestureRecognizer * _Nonnull)recognizer;
/// UIPinchGestureRecognizer - Pinching Objects
/// If it’s a UITextView will make the font bigger so it doen’t look pixlated
- (void)pinchGesture:(UIPinchGestureRecognizer * _Nonnull)recognizer;
/// UIRotationGestureRecognizer - Rotating Objects
- (void)rotationGesture:(UIRotationGestureRecognizer * _Nonnull)recognizer;
/// UITapGestureRecognizer - Taping on Objects
/// Will make scale scale Effect
/// Selecting transparent parts of the imageview won’t move the object
- (void)tapGesture:(UITapGestureRecognizer * _Nonnull)recognizer;
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer * _Nonnull)otherGestureRecognizer SWIFT_WARN_UNUSED_RESULT;
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldRequireFailureOfGestureRecognizer:(UIGestureRecognizer * _Nonnull)otherGestureRecognizer SWIFT_WARN_UNUSED_RESULT;
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldBeRequiredToFailByGestureRecognizer:(UIGestureRecognizer * _Nonnull)otherGestureRecognizer SWIFT_WARN_UNUSED_RESULT;
- (void)screenEdgeSwiped:(UIScreenEdgePanGestureRecognizer * _Nonnull)recognizer;
@property (nonatomic, readonly) BOOL prefersStatusBarHidden;
/// Scale Effect
- (void)scaleEffectWithView:(UIView * _Nonnull)view;
/// Moving Objects
/// delete the view if it’s inside the delete view
/// Snap the view back if it’s out of the canvas
- (void)moveViewWithView:(UIView * _Nonnull)view recognizer:(UIPanGestureRecognizer * _Nonnull)recognizer;
- (NSArray<UIImageView *> * _Nonnull)subImageViewsWithView:(UIView * _Nonnull)view SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC13OSPhotoEditor13ResizeControl")
@interface ResizeControl : UIView
@property (nonatomic, weak) id <ResizeControlDelegate> _Nullable delegate;
@property (nonatomic) CGPoint translation;
@property (nonatomic) BOOL enabled;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)handlePan:(UIPanGestureRecognizer * _Nonnull)gestureRecognizer;
@end



SWIFT_CLASS("_TtC13OSPhotoEditor25StickerCollectionViewCell")
@interface StickerCollectionViewCell : UICollectionViewCell
@property (nonatomic, weak) IBOutlet UIImageView * _Null_unspecified stickerImage;
- (void)awakeFromNib;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIPageControl;

SWIFT_CLASS("_TtC13OSPhotoEditor22StickersViewController")
@interface StickersViewController : UIViewController <UIGestureRecognizerDelegate>
@property (nonatomic, weak) IBOutlet UIView * _Null_unspecified headerView;
@property (nonatomic, weak) IBOutlet UIView * _Null_unspecified holdView;
@property (nonatomic, weak) IBOutlet UIScrollView * _Null_unspecified scrollView;
@property (nonatomic, weak) IBOutlet UIPageControl * _Null_unspecified pageControl;
@property (nonatomic, strong) UICollectionView * _Null_unspecified collectioView;
@property (nonatomic, strong) UICollectionView * _Null_unspecified emojisCollectioView;
@property (nonatomic, strong) EmojisCollectionViewDelegate * _Null_unspecified emojisDelegate;
@property (nonatomic, copy) NSArray<UIImage *> * _Nonnull stickers;
@property (nonatomic, strong) id <StickersViewControllerDelegate> _Nullable stickersViewControllerDelegate;
@property (nonatomic, readonly) CGSize screenSize;
@property (nonatomic, readonly) CGFloat fullView;
@property (nonatomic, readonly) CGFloat partialView;
- (void)viewDidLoad;
- (void)configureCollectionViews;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
- (void)didReceiveMemoryWarning;
- (void)panGesture:(UIPanGestureRecognizer * _Nonnull)recognizer;
- (void)removeBottomSheetView;
- (void)prepareBackgroundView;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@interface StickersViewController (SWIFT_EXTENSION(OSPhotoEditor)) <UIScrollViewDelegate>
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
@end


@interface StickersViewController (SWIFT_EXTENSION(OSPhotoEditor)) <UICollectionViewDataSource, UICollectionViewDelegateFlowLayout>
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (NSInteger)numberOfSectionsInCollectionView:(UICollectionView * _Nonnull)collectionView SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout minimumLineSpacingForSectionAtIndex:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout minimumInteritemSpacingForSectionAtIndex:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
@end










#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
